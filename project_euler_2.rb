# Even Fibonacci numbers:
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def sum_of_positive_nums_in_fibonacci_till(number)
  return 0 if number == 0
  return 1 if number == 1
  array = [1]
  sum = 0
  n = 2
  until n > number
    array.push(n)
    sum += n if n.even?
    n = array[-1] + array[-2]
  end
  sum
end

p  sum_of_positive_nums_in_fibonacci_till(4_000_000)
p  sum_of_positive_nums_in_fibonacci_till(2)
p  sum_of_positive_nums_in_fibonacci_till(1)
p  sum_of_positive_nums_in_fibonacci_till(0)
p  sum_of_positive_nums_in_fibonacci_till(3)
